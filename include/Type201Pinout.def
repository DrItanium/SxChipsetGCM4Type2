#include "GrandCentralM4Pinout.def"

// Uno breakout found on the board itself
UnoBreakout_A0 = PORT_PA02,
UnoBreakout_A1 = PORT_PA05,
UnoBreakout_A2 = PORT_PB03,
UnoBreakout_A3 = PORT_PB04,
UnoBreakout_A4 = PORT_PB05,
UnoBreakout_A5 = PORT_PB06,

UnoBreakout_D0 = PORT_PB25,
UnoBreakout_D1 = PORT_PB24,
UnoBreakout_D2 = PORT_PA04,
UnoBreakout_D3 = PORT_PA06,
UnoBreakout_D4 = PORT_PA07,
UnoBreakout_D5 = PORT_PB07,
UnoBreakout_D6 = PORT_PB08,
UnoBreakout_D7 = PORT_PB09,
UnoBreakout_D8 = PORT_PB14,
UnoBreakout_D9 = PORT_PB15,
UnoBreakout_D10 = PORT_D10,
UnoBreakout_D11 = PORT_D08,
UnoBreakout_D12 = PORT_D11,
UnoBreakout_D13 = PORT_D09,

GPIOSelect = UnoBreakout_D10,

// i960 Input Mux Breakout
MUXSel0 = PORT_PA12,
MUXSel1 = PORT_PA13,
MUXSel2 = PORT_PA14,
MUX_EN = PORT_PA15,
MUXADR0 = PORT_PA16,
MUXADR1 = PORT_PA17,
MUXADR2 = PORT_PA18,
MUXADR3 = PORT_PA19,
MUXADR4 = PORT_PA20,
MUXADR5 = PORT_PA21,
MUXADR6 = PORT_PA22,
MUXADR7 = PORT_PA23,

// Data lines
Data0 = PORT_PC00,
Data1 = PORT_PC01,
Data2 = PORT_PC02,
Data3 = PORT_PC03,
Data4 = PORT_PC04,
Data5 = PORT_PC05,
Data6 = PORT_PC06,
Data7 = PORT_PC07,
// D8 and D9 come at the end because PC08 and PC09 are not exposed for me to use
// instead, we read the full port in and move D8 and D9 into place after the fact then truncate to 16-bits when reading
// writing is pretty easy. We just move D8 and D9 out to PC16 and PC17 and then set the port up
Data8 = PORT_PC16,
Data9 = PORT_PC17,
Data10 = PORT_PC10,
Data11 = PORT_PC11,
Data12 = PORT_PC12,
Data13 = PORT_PC13,
Data14 = PORT_PC14,
Data15 = PORT_PC15,

// various control signals
// serial connections to the feathers + interrupts
Feather0_RX = PORT_B12,
Feather0_TX = PORT_B13,
Feather1_RX = PORT_PC22,
Feather1_TX = PORT_PC23,
Feather1_INT = PORT_B00,
Feather0_INT = PORT_B01,

// Serial connection to the Programmable Interrupt Controller
PIC_RX = PORT_B16,
PIC_TX = PORT_B17,

// management engine control signals
InTransaction = PORT_B23,
DoCycle = PORT_B22,
BurstNext = PORT_B02,
SuccessfulBoot = PORT_B18,

// extra i960 signals
i960_HOLD = PORT_D20,
i960_HLDA = PORT_D21,
INT_EN0 = PORT_C21,
Reset4809 = PORT_C20,
Ready = PORT_C18,
// all of the interrupts will be mapped to the same pin

ChipsetBooted = PORT_C19,

SD_EN = SDCARD_CS,

W_R_ = AliasDeviceBase,       i960_A8  /* = Mux_BitB0 */ , i960_A16 /* = Mux_BitB0 */, i960_A24 /* = Mux_BitB0 */, i960_DT_R /* = Mux_BitB0 */,
i960_A1 /* = Mux_BitB1 */,        i960_A9  /* = Mux_BitB1 */ , i960_A17 /* = Mux_BitB1 */, i960_A25 /* = Mux_BitB1 */, i960_BurstA1 /* = Mux_BitB1 */,
i960_A2 /* = Mux_BitB2 */,        i960_A10 /* = Mux_BitB2 */ , i960_A18 /* = Mux_BitB2 */, i960_A26 /* = Mux_BitB2 */, i960_BurstA2 /* = Mux_BitB2 */,
i960_A3 /* = Mux_BitB3 */,        i960_A11 /* = Mux_BitB3 */ , i960_A19 /* = Mux_BitB3 */, i960_A27 /* = Mux_BitB3 */, i960_BurstA3 /* = Mux_BitB3 */,
i960_A4 /* = Mux_BitB4 */,        i960_A12 /* = Mux_BitB4 */ , i960_A20 /* = Mux_BitB4 */, i960_A28 /* = Mux_BitB4 */, BE0 /* = Mux_BitB4 */,
i960_A5 /* = Mux_BitB5 */,        i960_A13 /* = Mux_BitB5 */ , i960_A21 /* = Mux_BitB5 */, i960_A29 /* = Mux_BitB5 */, BE1 /* = Mux_BitB5 */,
i960_A6 /* = Mux_BitB6 */,        i960_A14 /* = Mux_BitB6 */ , i960_A22 /* = Mux_BitB6 */, i960_A30 /* = Mux_BitB6 */,
i960_A7 /* = Mux_BitB7 */,        i960_A15 /* = Mux_BitB7 */ , i960_A23 /* = Mux_BitB7 */, i960_A31 /* = Mux_BitB7 */,
WaitBoot960 /* = ChipsetBooted */,
Reset960 /* = Reset4809 */,